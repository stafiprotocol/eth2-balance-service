basePath: /reth
definitions:
  node_handlers.ExitElection:
    properties:
      choosenTime:
        type: integer
      ethReward:
        type: string
      exitTime:
        type: integer
      publicKey:
        type: string
      status:
        type: integer
    type: object
  node_handlers.LatestUnstakeRecord:
    properties:
      timestamp:
        type: integer
      unstakeAmount:
        type: string
    type: object
  node_handlers.MsgData:
    properties:
      exitHours:
        type: integer
      slashAmount:
        type: string
      timestamp:
        type: integer
    type: object
  node_handlers.ProposeElection:
    properties:
      choosenTime:
        type: integer
      ethReward:
        type: string
      publicKey:
        type: string
      status:
        type: integer
    type: object
  node_handlers.ReqEjectorUptime:
    properties:
      validatorIndexList:
        description: hex string list
        items:
          type: integer
        type: array
    type: object
  node_handlers.ReqExitElectionList:
    properties:
      nodeAddress:
        type: string
      pageCount:
        type: integer
      pageIndex:
        type: integer
    type: object
  node_handlers.ReqNodeInfo:
    properties:
      nodeAddress:
        type: string
      pageCount:
        type: integer
      pageIndex:
        type: integer
      status:
        description: ignore if statusList not empty
        type: integer
      statusList:
        description: '{9 active 10 exited 20 pending 30 slash}'
        items:
          type: integer
        type: array
    type: object
  node_handlers.ReqNotifyMsgList:
    properties:
      nodeAddress:
        description: hex string
        type: string
    type: object
  node_handlers.ReqProof:
    properties:
      nodeAddress:
        type: string
    type: object
  node_handlers.ReqProposeElectionList:
    properties:
      nodeAddress:
        type: string
      pageCount:
        type: integer
      pageIndex:
        type: integer
    type: object
  node_handlers.ReqPubkeyDetail:
    properties:
      chartDuSeconds:
        type: integer
      pageCount:
        type: integer
      pageIndex:
        type: integer
      pubkey:
        description: hex string
        type: string
    type: object
  node_handlers.ReqPubkeyStatusList:
    properties:
      pubkeyList:
        description: hex string list
        items:
          type: string
        type: array
    type: object
  node_handlers.ReqRewardInfo:
    properties:
      chartDuSeconds:
        type: integer
      nodeAddress:
        description: hex string
        type: string
      pageCount:
        type: integer
      pageIndex:
        type: integer
    type: object
  node_handlers.ReqWithdrawInfo:
    properties:
      nodeAddress:
        description: hex string
        type: string
      pageCount:
        type: integer
      pageIndex:
        type: integer
    type: object
  node_handlers.ResNotifyMsg:
    properties:
      msgData:
        $ref: '#/definitions/node_handlers.MsgData'
      msgId:
        type: string
      msgType:
        type: integer
    type: object
  node_handlers.ResPubkey:
    properties:
      pubkey:
        type: string
      status:
        type: integer
    type: object
  node_handlers.ResReward:
    properties:
      commission:
        type: integer
      selfEraRewardEth:
        type: string
      selfStakedEth:
        type: string
      timestamp:
        type: integer
      totalEraRewardEth:
        type: string
      totalStakedEth:
        type: string
    type: object
  node_handlers.ResWithdraw:
    properties:
      depositAmount:
        type: string
      explorerUrl:
        type: string
      operateTimestamp:
        type: integer
      receivedAddress:
        type: string
      rewardAmount:
        type: string
      status:
        type: integer
      timeLeft:
        type: integer
      totalAmount:
        type: string
      txHash:
        type: string
    type: object
  node_handlers.RspEjectorUptime:
    properties:
      uptimeList:
        items:
          $ref: '#/definitions/node_handlers.UpTime'
        type: array
    type: object
  node_handlers.RspExitElectionList:
    properties:
      electionList:
        items:
          $ref: '#/definitions/node_handlers.ExitElection'
        type: array
      electionTotalCount:
        type: integer
    type: object
  node_handlers.RspGasPrice:
    properties:
      baseFee:
        type: integer
      ethPrice:
        type: number
      priorityFee:
        type: integer
    type: object
  node_handlers.RspNodeInfo:
    properties:
      activeCount:
        type: integer
      ethPrice:
        type: number
      exitedCount:
        type: integer
      pendingCount:
        type: integer
      pubkeyList:
        items:
          $ref: '#/definitions/node_handlers.ResPubkey'
        type: array
      selfDepositedEth:
        type: string
      selfRewardEth:
        type: string
      slashCount:
        type: integer
      totalCount:
        type: integer
      totalManagedEth:
        type: string
      totalSlashAmount:
        type: string
    type: object
  node_handlers.RspNotifyMsgList:
    properties:
      msgList:
        items:
          $ref: '#/definitions/node_handlers.ResNotifyMsg'
        type: array
    type: object
  node_handlers.RspPoolData:
    properties:
      allEth:
        description: staker principal + validator principal + reward
        type: string
      depositedEth:
        description: staker principal + validator principal
        type: string
      ethPrice:
        type: number
      matchedValidators:
        description: staked waiting actived
        type: integer
      mintedREth:
        type: string
      poolEth:
        description: staker principal + validator principal + reward
        type: string
      stakeApr:
        type: number
      stakedEth:
        description: matched number * 32 + solo unmatched number * 4 + trust unmatched
          number * 1
        type: string
      unmatchedEth:
        description: userdeposit balance
        type: string
      validatorApr:
        type: number
    type: object
  node_handlers.RspProof:
    properties:
      address:
        type: string
      index:
        type: integer
      overallAmount:
        type: string
      proof:
        items:
          type: string
        type: array
      remainingSeconds:
        type: integer
      totalExitDepositAmount:
        type: string
      totalRewardAmount:
        type: string
    type: object
  node_handlers.RspProposeElectionList:
    properties:
      electionList:
        items:
          $ref: '#/definitions/node_handlers.ProposeElection'
        type: array
      electionTotalCount:
        type: integer
    type: object
  node_handlers.RspPubkeyDetail:
    properties:
      activeDays:
        type: integer
      activeEpoch:
        type: integer
      apr:
        type: number
      chartXData:
        items:
          type: integer
        type: array
      chartYData:
        items:
          type: string
        type: array
      currentBalance:
        type: string
      depositBalance:
        type: string
      effectiveBalance:
        type: string
      eligibleDays:
        type: integer
      eligibleEpoch:
        type: integer
      ethPrice:
        type: number
      last24hRewardEth:
        type: string
      nodeDepositAmount:
        type: string
      slashEventList:
        items:
          $ref: '#/definitions/node_handlers.SlashEvent'
        type: array
      status:
        type: integer
      totalCount:
        type: integer
      totalSlashAmount:
        type: string
    type: object
  node_handlers.RspPubkeyStatusList:
    properties:
      nodeDepositAmountList:
        description: decimals 18
        items:
          type: string
        type: array
      statusList:
        items:
          type: integer
        type: array
    type: object
  node_handlers.RspRewardInfo:
    properties:
      chartXData:
        items:
          type: integer
        type: array
      chartYData:
        items:
          type: string
        type: array
      ethPrice:
        type: number
      lastEraRewardEth:
        type: string
      rewardList:
        items:
          $ref: '#/definitions/node_handlers.ResReward'
        type: array
      totalCount:
        type: integer
      totalStakedEth:
        type: string
    type: object
  node_handlers.RspUnstakePoolData:
    properties:
      ejectedValidators:
        type: integer
      last24hWaitingStakers:
        type: integer
      latestUnstakeRecord:
        $ref: '#/definitions/node_handlers.LatestUnstakeRecord'
      poolEth:
        type: string
      todayUnstakedEth:
        type: string
      unstakeableEth:
        type: string
      waitingStakers:
        type: integer
      waitingWithdrawEth:
        type: string
    type: object
  node_handlers.RspWithdrawInfo:
    properties:
      totalCount:
        type: integer
      withdrawList:
        items:
          $ref: '#/definitions/node_handlers.ResWithdraw'
        type: array
    type: object
  node_handlers.SlashEvent:
    properties:
      endBlock:
        type: integer
      explorerUrl:
        type: string
      slashAmount:
        type: string
      slashType:
        type: integer
      startBlock:
        type: integer
      startTimestamp:
        type: integer
    type: object
  node_handlers.UpTime:
    properties:
      uptime:
        type: number
      validatorIndex:
        type: integer
    type: object
  staker_handlers.ReqUnstakingPlanExist:
    properties:
      stakerAddress:
        description: hex string
        type: string
    type: object
  staker_handlers.ReqUploadUnstakingPlan:
    properties:
      amount:
        type: string
      stakerAddress:
        description: hex string
        type: string
    type: object
  staker_handlers.ReqWithdrawRemainingTime:
    properties:
      stakerAddress:
        description: hex string
        type: string
    type: object
  staker_handlers.RspUnstakingLeftSeconds:
    properties:
      leftSeconds:
        description: staked waiting actived
        type: integer
    type: object
  staker_handlers.RspUnstakingPlanExist:
    properties:
      exist:
        type: boolean
    type: object
  staker_handlers.RspWithdrawRemainingTime:
    properties:
      remainingSeconds:
        description: staked waiting actived
        type: integer
    type: object
  utils.Rsp:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8083
info:
  contact:
    email: tpkeeper.me@gmail.com
    name: tpkeeper
  description: reth api document.
  title: reth API
  version: "1.0"
paths:
  /v1/ejectorUptime:
    post:
      consumes:
      - application/json
      description: ejector uptime
      parameters:
      - description: ejector uptime
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqEjectorUptime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspEjectorUptime'
              type: object
      summary: ejector uptime
      tags:
      - v1
  /v1/exitElectionList:
    post:
      consumes:
      - application/json
      description: exit election list
      parameters:
      - description: election list
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqExitElectionList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspExitElectionList'
              type: object
      summary: exit election list
      tags:
      - v1
  /v1/gasPrice:
    get:
      description: gas price
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspGasPrice'
              type: object
      summary: gas price
      tags:
      - v1
  /v1/nodeInfo:
    post:
      consumes:
      - application/json
      description: node info
      parameters:
      - description: node info
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqNodeInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspNodeInfo'
              type: object
      summary: node info
      tags:
      - v1
  /v1/notifyMsgList:
    post:
      consumes:
      - application/json
      description: notify node msg list
      parameters:
      - description: notify msg
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqNotifyMsgList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspNotifyMsgList'
              type: object
      summary: notify msg list
      tags:
      - v1
  /v1/poolData:
    get:
      description: pool data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspPoolData'
              type: object
      summary: pool data
      tags:
      - v1
  /v1/proof:
    post:
      consumes:
      - application/json
      description: proof
      parameters:
      - description: proof
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqProof'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspProof'
              type: object
      summary: get proof of claim
      tags:
      - v1
  /v1/proposeElectionList:
    post:
      consumes:
      - application/json
      description: propose election list
      parameters:
      - description: election list
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqProposeElectionList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspProposeElectionList'
              type: object
      summary: propose election list
      tags:
      - v1
  /v1/pubkeyDetail:
    post:
      consumes:
      - application/json
      description: pubkey detail
      parameters:
      - description: pubkey detail
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqPubkeyDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspPubkeyDetail'
              type: object
      summary: pubkey detail
      tags:
      - v1
  /v1/pubkeyStatusList:
    post:
      consumes:
      - application/json
      description: pubkey status list
      parameters:
      - description: pubkey status list
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqPubkeyStatusList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspPubkeyStatusList'
              type: object
      summary: pubkey status list
      tags:
      - v1
  /v1/rewardInfo:
    post:
      consumes:
      - application/json
      description: reward info
      parameters:
      - description: reward info
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqRewardInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspRewardInfo'
              type: object
      summary: reward info
      tags:
      - v1
  /v1/staker/unstakingLeftSeconds:
    get:
      description: unstaking left seconds
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/staker_handlers.RspUnstakingLeftSeconds'
              type: object
      summary: staker unstaking left seconds
      tags:
      - v1
  /v1/staker/unstakingPlanExist:
    post:
      consumes:
      - application/json
      description: staker unstaking plan exit
      parameters:
      - description: unstaking plan exist
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/staker_handlers.ReqUnstakingPlanExist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/staker_handlers.RspUnstakingPlanExist'
              type: object
      summary: unstaking plan exit
      tags:
      - v1
  /v1/staker/uploadUnstakingPlan:
    post:
      consumes:
      - application/json
      description: staker unstaking plan
      parameters:
      - description: unstaking plan
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/staker_handlers.ReqUploadUnstakingPlan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Rsp'
      summary: unstaking plan
      tags:
      - v1
  /v1/staker/withdrawRemainingTime:
    post:
      consumes:
      - application/json
      description: staker withdraw remaining time
      parameters:
      - description: staker address
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/staker_handlers.ReqWithdrawRemainingTime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/staker_handlers.RspWithdrawRemainingTime'
              type: object
      summary: staker withdraw remaining time
      tags:
      - v1
  /v1/unstakePoolData:
    get:
      description: unstake pool data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspUnstakePoolData'
              type: object
      summary: unstake pool data
      tags:
      - v1
  /v1/uploadEjectorUptime:
    post:
      consumes:
      - application/json
      description: upload ejector uptime
      parameters:
      - description: ejector uptime
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqEjectorUptime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Rsp'
      summary: upload ejector uptime
      tags:
      - v1
  /v1/withdrawInfo:
    post:
      consumes:
      - application/json
      description: withdraw info
      parameters:
      - description: withdraw info
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/node_handlers.ReqWithdrawInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Rsp'
            - properties:
                data:
                  $ref: '#/definitions/node_handlers.RspWithdrawInfo'
              type: object
      summary: withdraw info
      tags:
      - v1
swagger: "2.0"
