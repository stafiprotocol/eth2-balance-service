// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: types/types.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidatorEpochIncome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestationSourceReward            uint64 `protobuf:"varint,2,opt,name=attestation_source_reward,json=attestationSourceReward,proto3" json:"attestation_source_reward,omitempty"`
	AttestationSourcePenalty           uint64 `protobuf:"varint,3,opt,name=attestation_source_penalty,json=attestationSourcePenalty,proto3" json:"attestation_source_penalty,omitempty"`
	AttestationTargetReward            uint64 `protobuf:"varint,4,opt,name=attestation_target_reward,json=attestationTargetReward,proto3" json:"attestation_target_reward,omitempty"`
	AttestationTargetPenalty           uint64 `protobuf:"varint,5,opt,name=attestation_target_penalty,json=attestationTargetPenalty,proto3" json:"attestation_target_penalty,omitempty"`
	AttestationHeadReward              uint64 `protobuf:"varint,6,opt,name=attestation_head_reward,json=attestationHeadReward,proto3" json:"attestation_head_reward,omitempty"`
	FinalityDelayPenalty               uint64 `protobuf:"varint,7,opt,name=finality_delay_penalty,json=finalityDelayPenalty,proto3" json:"finality_delay_penalty,omitempty"`
	ProposerSlashingInclusionReward    uint64 `protobuf:"varint,8,opt,name=proposer_slashing_inclusion_reward,json=proposerSlashingInclusionReward,proto3" json:"proposer_slashing_inclusion_reward,omitempty"`
	ProposerAttestationInclusionReward uint64 `protobuf:"varint,9,opt,name=proposer_attestation_inclusion_reward,json=proposerAttestationInclusionReward,proto3" json:"proposer_attestation_inclusion_reward,omitempty"`
	ProposerSyncInclusionReward        uint64 `protobuf:"varint,10,opt,name=proposer_sync_inclusion_reward,json=proposerSyncInclusionReward,proto3" json:"proposer_sync_inclusion_reward,omitempty"`
	SyncCommitteeReward                uint64 `protobuf:"varint,11,opt,name=sync_committee_reward,json=syncCommitteeReward,proto3" json:"sync_committee_reward,omitempty"`
	SyncCommitteePenalty               uint64 `protobuf:"varint,12,opt,name=sync_committee_penalty,json=syncCommitteePenalty,proto3" json:"sync_committee_penalty,omitempty"`
	SlashingReward                     uint64 `protobuf:"varint,13,opt,name=slashing_reward,json=slashingReward,proto3" json:"slashing_reward,omitempty"`
	SlashingPenalty                    uint64 `protobuf:"varint,14,opt,name=slashing_penalty,json=slashingPenalty,proto3" json:"slashing_penalty,omitempty"`
	TxFeeRewardWei                     []byte `protobuf:"bytes,15,opt,name=tx_fee_reward_wei,json=txFeeRewardWei,proto3" json:"tx_fee_reward_wei,omitempty"`
	ProposalsMissed                    uint64 `protobuf:"varint,16,opt,name=proposals_missed,json=proposalsMissed,proto3" json:"proposals_missed,omitempty"`
}

func (x *ValidatorEpochIncome) Reset() {
	*x = ValidatorEpochIncome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorEpochIncome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorEpochIncome) ProtoMessage() {}

func (x *ValidatorEpochIncome) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorEpochIncome.ProtoReflect.Descriptor instead.
func (*ValidatorEpochIncome) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatorEpochIncome) GetAttestationSourceReward() uint64 {
	if x != nil {
		return x.AttestationSourceReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetAttestationSourcePenalty() uint64 {
	if x != nil {
		return x.AttestationSourcePenalty
	}
	return 0
}

func (x *ValidatorEpochIncome) GetAttestationTargetReward() uint64 {
	if x != nil {
		return x.AttestationTargetReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetAttestationTargetPenalty() uint64 {
	if x != nil {
		return x.AttestationTargetPenalty
	}
	return 0
}

func (x *ValidatorEpochIncome) GetAttestationHeadReward() uint64 {
	if x != nil {
		return x.AttestationHeadReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetFinalityDelayPenalty() uint64 {
	if x != nil {
		return x.FinalityDelayPenalty
	}
	return 0
}

func (x *ValidatorEpochIncome) GetProposerSlashingInclusionReward() uint64 {
	if x != nil {
		return x.ProposerSlashingInclusionReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetProposerAttestationInclusionReward() uint64 {
	if x != nil {
		return x.ProposerAttestationInclusionReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetProposerSyncInclusionReward() uint64 {
	if x != nil {
		return x.ProposerSyncInclusionReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetSyncCommitteeReward() uint64 {
	if x != nil {
		return x.SyncCommitteeReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetSyncCommitteePenalty() uint64 {
	if x != nil {
		return x.SyncCommitteePenalty
	}
	return 0
}

func (x *ValidatorEpochIncome) GetSlashingReward() uint64 {
	if x != nil {
		return x.SlashingReward
	}
	return 0
}

func (x *ValidatorEpochIncome) GetSlashingPenalty() uint64 {
	if x != nil {
		return x.SlashingPenalty
	}
	return 0
}

func (x *ValidatorEpochIncome) GetTxFeeRewardWei() []byte {
	if x != nil {
		return x.TxFeeRewardWei
	}
	return nil
}

func (x *ValidatorEpochIncome) GetProposalsMissed() uint64 {
	if x != nil {
		return x.ProposalsMissed
	}
	return 0
}

var File_types_types_proto protoreflect.FileDescriptor

var file_types_types_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xf1, 0x06, 0x0a, 0x14, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x3c, 0x0a, 0x1a, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x18, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x3a, 0x0a,
	0x19, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x17, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x34, 0x0a, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x22, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x51, 0x0a, 0x25, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x22, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x43, 0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65,
	0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x50, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73,
	0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x11, 0x74, 0x78, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x77, 0x65, 0x69, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x57, 0x65, 0x69, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73,
	0x5f, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_types_types_proto_rawDescOnce sync.Once
	file_types_types_proto_rawDescData = file_types_types_proto_rawDesc
)

func file_types_types_proto_rawDescGZIP() []byte {
	file_types_types_proto_rawDescOnce.Do(func() {
		file_types_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_types_proto_rawDescData)
	})
	return file_types_types_proto_rawDescData
}

var file_types_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_types_types_proto_goTypes = []interface{}{
	(*ValidatorEpochIncome)(nil), // 0: types.ValidatorEpochIncome
}
var file_types_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_types_types_proto_init() }
func file_types_types_proto_init() {
	if File_types_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorEpochIncome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_types_proto_goTypes,
		DependencyIndexes: file_types_types_proto_depIdxs,
		MessageInfos:      file_types_types_proto_msgTypes,
	}.Build()
	File_types_types_proto = out.File
	file_types_types_proto_rawDesc = nil
	file_types_types_proto_goTypes = nil
	file_types_types_proto_depIdxs = nil
}
